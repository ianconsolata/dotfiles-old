((("content#" .
   [0 0 0 0 0 0 1 0])
  ("control" .
   [0 0 0 0 1 0 0])
  (":raw-response?" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  (":content-type" .
   [0 0 0 0 0 0 1 0 1 1 0 0 0])
  ("raw-response" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("content-type" .
   [1 0 0 0 0 0 0 0 0 2 0 0])
  ("100" .
   [1 0 0])
  ("html-utils" .
   [0 0 0 0 0 0 0 1 0 0])
  ("frontend.utils.html" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("frontend" .
   [0 0 0 0 0 0 0 1])
  ("open" .
   [1 0 0 0])
  ("client-side-max-characters" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("count" .
   [0 0 0 0 1])
  ("message" .
   [2 0 0 1 1 0 0])
  ("should-strip?" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("output" .
   [1 0 0 0 0 0])
  ("strip-console-codes" .
   [0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0])
  ("100000" .
   [1 0 0 0 0 1])
  ("html-escaped-message" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("truncated-message" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("js/console.log" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":guest-ip-address" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("circle.secrets/with-dangerous-secrets" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":_id" .
   [1 0 0 0])
  ("23" .
   [1 0])
  (":$lt" .
   [1 0 0 0])
  ("end" .
   [4 0 0])
  (":start_time" .
   [1 0 0 0 0 0 0 1 0 0 0])
  ("clj-time.format" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 1])
  ("osx-trial-active?" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("in-trial?" .
   [0 0 0 0 0 0 0 1 0])
  ("plan" .
   [3 0 0 0])
  ("paid-plan?" .
   [0 0 0 0 1 0 0 0 0 0])
  ("date-pairs" .
   [0 0 0 0 0 0 0 1 1 0])
  ("dates" .
   [2 0 0 0 0])
  ("40" .
   [1 0])
  ("2016" .
   [1 0 0 0])
  ("clj-time.core/date-time" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0])
  ("start" .
   [4 0 0 0 0])
  ("yesterday" .
   [0 0 0 0 1 0 0 0 0])
  ("now" .
   [1 0 0])
  ("circle" .
   [2 0 0 0 0 0])
  ("new-base" .
   [3 0 0 0 0 0 0 0])
  ("digits" .
   [4 0 0 0 0 0])
  ("base10->" .
   [0 0 0 0 2 0 2 3])
  ("pair" .
   [0 0 1 0])
  ("disj" .
   [0 0 1 0])
  (":maxent-a" .
   [1 0 0 0 0 0 0 0 0])
  ("1.0" .
   [2 0 0])
  (":empty" .
   [1 0 0 0 0 0])
  (":session-has-view" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":session-date" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0])
  (":secs" .
   [0 0 0 1 0])
  ("Metrics" .
   [1 0 0 0 0 0 0])
  ("n2" .
   [1 0])
  ("n1" .
   [1 0])
  ("+dwell-thresholds+" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("metric" .
   [0 0 0 0 0 1])
  ("meta" .
   [0 0 0 1])
  ("DwellThresholds" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("s/pred" .
   [1 0 0 0 0 0])
  ("+dwell-metrics+" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("90" .
   [1 0])
  ("StrMetricMap" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  (":session-has-remove" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("#_" .
   [12 0])
  ("kw-format" .
   [1 0 0 0 0 0 0 0 0])
  ("invert-metric" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("metric-map" .
   [1 0 0 0 0 0 0 0 0 0])
  ("filter-fn" .
   [1 0 0 0 0 0 0 0 0])
  ("+all-metrics+" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("+at-values+" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("Dwell" .
   [0 0 0 1 1])
  ("+A-score-metrics+" .
   [1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("InternaMetricMap" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1])
  ("Metric" .
   [0 0 0 0 0 1])
  ("all-metrics" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("single" .
   [0 0 0 0 1 0])
  ("map-val" .
   [1 0 0 0 0 0 0])
  ("pred" .
   [1 0 0 0])
  ("action-metrics" .
   [0 0 0 0 0 0 0 0 0 3 1 0 0 0])
  ("Building" .
   [0 0 0 0 0 1 0 0])
  ("build-dwell-metrics" .
   [0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0])
  ("thresh" .
   [0 0 0 0 1 0])
  ("internal-average-metric" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("threshold" .
   [0 0 0 0 0 0 0 0 1])
  ("concat" .
   [0 0 0 0 1 0])
  ("merge-with" .
   [0 0 0 0 0 0 0 0 1 1])
  ("eval" .
   [0 0 0 1])
  ("iPhone" .
   [0 0 0 0 0 1])
  ("filter-metric" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("mod" .
   [0 0 1])
  (":A-average-web" .
   [1 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("intern" .
   [0 0 0 0 1 0])
  ("InternalMetricMap" .
   [0 0 0 0 0 0 1 3 0 0 2 0 0 1 0 0 0])
  ("scores" .
   [0 0 0 0 0 1])
  ("Average" .
   [0 0 0 0 1 0 1])
  ("base" .
   [2 0 0 2])
  ("score-fn" .
   [2 0 0 0 0 0 0 1])
  ("test-metrics" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  (":eval" .
   [4 0 0 0 1])
  (":test" .
   [3 0 0 0 0])
  ("MetricMap" .
   [1 0 0 0 0 0 0 0 2])
  ("+eval-A-score-metrics+" .
   [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  (":debug" .
   [1 0 0 0 0 0])
  ("InterleavedRankerParams" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("se/extend-schema" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("plumbing.core-incubator/spy" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("debugify-interleaving" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Debug" .
   [0 0 0 0 1])
  ("map-from-keys" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("map-from-vals" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":doc-id->ranker" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  (":ranker" .
   [2 0 0 0 0 0 0])
  ("served-doc" .
   [2 0 0 0 0 0 0 0 1 0])
  ("serve" .
   [0 0 0 0 2])
  ("uri" .
   [1 0 0])
  ("server-name" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":keys" .
   [1 0 0 0 0])
  ("endpoint" .
   [1 0 0 0 1 0 0 0])
  ("plumbing.core-incubator" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0])
  ("observer" .
   [0 0 0 0 0 0 0 1])
  ("observer/counter" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("+counters+" .
   [2 0 0 0 0 0 0 0 0 0])
  ("image-resize-fails" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":web-resize" .
   [0 0 0 0 0 0 0 0 0 1 0])
  (":query-resize" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":server-name" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("counters" .
   [2 0 0 0 0 0 0 0])
  (":handler-hits" .
   [1 0 0 0 0 0 0 0 1 0 0 0 0])
  ("domain" .
   [0 0 0 0 1 0])
  ("req" .
   [2 0 0])
  (":type-info" .
   [1 0 0 0 0 0 0 0 0 0])
  ("resize" .
   [0 0 0 0 0 1])
  ("rest" .
   [0 0 0 1])
  ("resize-fail-counter" .
   [0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0])
  (":div" .
   [1 0 0 0])
  ("twitter-shares" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  (":h1" .
   [1 0 0])
  ("doc-id" .
   [1 0 0 0 0 0])
  ("place" .
   [0 0 1 0 0])
  ("Long/parseLong" .
   [0 0 0 0 1 0 0 0 1 0 1 0 0 0])
  ("log/info" .
   [0 0 0 1 0 0 0 0])
  ("Long" .
   [3 0 0 0])
  ("plumbing.core" .
   [0 0 0 0 0 0 1 0 0 0 0 0 1])
  (":s" .
   [1 0])
  ("ShareableService" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("Interest" .
   [1 0 0 0 0 0 1 0])
  (":always-validate" .
   [0 0 0 1 0 4 0 0 0 0 1 0 0 0 0 2])
  ("always" .
   [0 0 0 0 1 0])
  ("share/ServiceShareInfo" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("share" .
   [1 0 0 0 0])
  ("api.share.core" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("API" .
   [0 0 1])
  (":interest" .
   [0 0 0 0 0 0 0 1 0])
  ("client_type" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("key" .
   [0 0 1])
  ("valid-first-screen?" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("constantly" .
   [0 0 0 0 0 0 2 1 0 0])
  ("case" .
   [0 0 1 0])
  ("client-type" .
   [0 0 0 2 0 0 0 0 0 0 1])
  ("first" .
   [0 0 0 0 3])
  (":public_id" .
   [1 0 0 0 1 0 0 1 0 0])
  (":p_client" .
   [0 0 0 1 0 0 0 0 0])
  ("dedup-trace" .
   [1 0 0 0 0 0 0 0 0 0 1])
  ("Trace" .
   [1 0 0 0 0])
  ("deduped-trace" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("trace" .
   [6 0 0 0 0])
  (":action_counts" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  (":transition_action" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  (":transitions" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  (":from_start_date" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":from_screen" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  (":to_start_date" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":to_screen" .
   [0 0 0 0 0 0 0 1 0 0])
  ("distinct-by" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("Traces" .
   [0 0 0 5 0 1])
  ("identity" .
   [0 0 0 0 0 1 0 1])
  ("plumbing.logging/infof" .
   [0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 1])
  ("plumbing.map" .
   [0 0 4 1 2 0 0 0 0 0 0 0])
  ("pci" .
   [1 0 1])
  ("splash" .
   [0 0 1 0 0 0])
  ("distinct?" .
   [0 0 0 0 0 0 1 0 0])
  ("filter" .
   [0 0 0 0 0 2])
  ("::values" .
   [1 0 0 0 0 0 0 0])
  ("objc-name" .
   [0 0 0 0 0 0 1 0 1])
  ("find" .
   [0 0 1 0])
  ("helpers/lisp->camel-case" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Helper" .
   [0 0 0 0 0 1])
  (":-" .
   [10 0])
  ("field-name" .
   [0 0 0 0 0 0 0 0 1 2])
  ("s/def" .
   [0 0 0 0 4])
  ("here!" .
   [0 0 1 0 0])
  ("lisp->camel-case" .
   [0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 0])
  (":name" .
   [3 0 0 0 0])
  (":original-key" .
   [0 0 0 1 1 0 0 0 0 0 0 0 1])
  ("in" .
   [4 0])
  ("str/replace" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("inc" .
   [0 0 1])
  ("..." .
   [1 0 0])
  ("reset!" .
   [0 0 0 0 0 1])
  (":body-copy" .
   [2 0 0 0 0 0 0 0 0 0])
  (":line1" .
   [1 0 0 0 0 0])
  (":title1" .
   [0 0 0 0 0 0 1])
  (":line2" .
   [3 0 0 0 0 0])
  ("String" .
   [9 0 0 0 0 1])
  ("s/enum" .
   [2 0 0 0 0 0])
  ("s/defschema" .
   [0 0 0 0 0 0 0 2 1 1 0])
  ("print" .
   [0 0 0 0 2])
  ("#spy/p" .
   [0 0 0 1 0 0])
  ("def" .
   [2 0 1])
  ("safe-get" .
   [5 0 0 0 0 0 0 2])
  ("->>" .
   [5 0 0])
  (":login" .
   [2 0 0 0 1 0])
  ("map-vals" .
   [3 0 0 0 0 0 2 2])
  ("action" .
   [4 0 0 0 0 1])
  ("function" .
   [5 0 0 0 1 0 0 0])
  ("removeFriend" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("addFriend" .
   [1 0 0 0 0 0 0 0 0])
  ("processAction" .
   [0 0 0 0 0 0 1 1 0 0 0 0 0])
  ("friend" .
   [0 0 0 0 0 1])
  ("idForFriend" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("page" .
   [1 0 0 0])
  ("hiccup.page" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":post-auth" .
   [0 0 0 0 0 0 0 1 0 0])
  (":public" .
   [1 0 0 0 0 0 0])
  ("js/location" .
   [5 0 0 0 0 0 0 0 0 0 1])
  ("set!" .
   [1 0 0 0])
  ("js/document." .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("ios-app-supported?" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("ios-url" .
   [2 0 0 0 0 0 1])
  ("isn" .
   [0 0 1])
  ("ios-route" .
   [1 0 0 0 0 0 0 0 0])
  ("t/spy" .
   [2 0 0 0 0])
  (":message" .
   [1 0 0 0 0 0 0 1])
  ("payload" .
   [1 0 0 0 0 0 0])
  ("AlertPayload" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":type" .
   [2 0 0 0 0])
  ("no" .
   [3 0])
  ("s/Str" .
   [1 0 0 0 0])
  (".-location" .
   [1 0 0 0 0 0 0 0 0 0])
  ("js/window" .
   [0 0 0 0 0 0 0 0 1])
  ("query-params" .
   [2 0 0 0 0 0 0 0 0 0 1 0])
  (".-pathname" .
   [2 0 0 0 0 0 0 0 0 0])
  ("path" .
   [1 0 0 0])
  (".-innerWidth" .
   [0 0 0 0 0 0 0 0 0 1 0 0])
  (".-userAgent" .
   [0 0 0 0 0 0 0 0 0 1 0])
  (":dogfood-tiny" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  (":service" .
   [1 0 0 0 0 0 0 0])
  (":server-port" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  (":replicated?" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("service" .
   [1 0 0 0 0 0 0])
  ("nil" .
   [2 0 0])
  (":body-copy-with-format" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0])
  ("body-copy-with-format" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("plumbing.logging" .
   [0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0])
  ("log/infof" .
   [1 0 0 0 0 0 0 0 0])
  ("handle" .
   [0 0 0 1 2 0])
  ("cond" .
   [0 0 0 3])
  ("c-user" .
   [2 0 0 0 0 0])
  ("deleted." .
   [1 0 0 0 0 0 0 0])
  ("has" .
   [0 0 1])
  ("do" .
   [4 0])
  (".toLowerCase" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("go" .
   [1 0])
  ("api/update-user" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  (":access-level" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("time" .
   [0 0 0 1])
  ("loop" .
   [0 0 0 1])
  ("ref" .
   [0 0 2])
  ("recur" .
   [2 0 0 0 0])
  ("async" .
   [0 0 0 0 1])
  ("res" .
   [1 0 0])
  (":ref" .
   [0 0 0 1])
  ("colors/text-dark" .
   [0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0])
  ("colors/text-medium" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("api/user-" .
   [0 0 0 0 0 0 1 0 0])
  ("user/update!" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("user" .
   [1 0 0 0])
  (":&:hover" .
   [1 0 0 0 0 0 0 0])
  (":color" .
   [1 0 0 0 0 0])
  ("colors/red-medium" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":page" .
   [0 0 0 0 1])
  (":margin" .
   [0 0 0 0 1 0 0])
  ("20" .
   [3 0])
  ("px" .
   [1 0])
  (":border" .
   [1 0 0 0 0 0 0])
  ("utils/border" .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("colors/background-dark" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  (":size" .
   [1 0 0 0 0])
  ("percent" .
   [0 0 0 0 0 1 0])
  ("email-form" .
   [1 0 0 0 0 0 0 0 0 0])
  (":subject" .
   [1 0 0 0 0 0 0 0])
  (":title" .
   [2 0 0 0 0 0])
  ("s/defn" .
   [5 0 0 0 0 6])
  ("s/either" .
   [1 0 0 0 0 1 0 0])
  ("SharePrefill" .
   [0 0 0 0 0 0 0 1 0 1 2 0])
  ("ShareUrl" .
   [0 0 0 0 0 1 0 0])
  ("EmailSharePrefill" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  (":let" .
   [1 0 0 0])
  ("interest" .
   [4 0 0 0 0 0 0 0])
  ("share-info" .
   [1 0 0 0 0 0 0 0 2 0])
  ("interest->share-info" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("response" .
   [1 0 0 0 0 0 0 0])
  ("svc" .
   [1 0 0])
  ("is-=" .
   [3 0 0 0])
  ("rsp" .
   [1 0 0])
  ("resp" .
   [4 0 0 0])
  ("keyword" .
   [0 0 0 0 0 0 1])
  ("Please" .
   [0 0 1 0 0 0])
  ("map-keys" .
   [3 0 0 0 0 0 0 1])
  ("client-does-share" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("an" .
   [1 0])
  ("interest-id." .
   [0 0 0 0 0 0 0 0 0 1 0 0])
  (":click" .
   [0 0 0 0 1 0])
  (":client-does-share" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("true" .
   [5 0 0 0])
  ("paginated-list-cursor" .
   [7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("pci/pprint-str" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":date" .
   [2 0 0 0 0])
  ("java.util.Date." .
   [0 0 0 0 1 2 0 0 0 0 0 0 1 0 0])
  ("safe-get-in" .
   [4 0 0 0 0 0 0 0 0 0 0])
  ("->anchor" .
   [3 0 0 0 0 0 0 0])
  (":comment" .
   [0 0 0 0 0 0 1 0])
  (":fitness-stats" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("FitnessStats" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("fitness-stats/view-count" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("actions/+simple-action-types+" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("count-when" .
   [1 0 0 0 0 0 0 0 0 0])
  ("actions/action" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  (":activity" .
   [1 0 0 0 0 0 0 0 0])
  ("clojure.string" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  (":as" .
   [1 0 0])
  ("domain.docs.actions" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("actions" .
   [1 0 0 0 0 0 0])
  ("if" .
   [1 0])
  (":cluster-id" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("->section" .
   [0 0 0 0 1 0 0 0 0])
  ("section" .
   [1 0 0 0 0 0 0])
  ("content" .
   [2 0 0 0 0 0 0])
  ("title" .
   [1 0 0 0 0])
  ("raw-url-bucket" .
   [0 0 0 0 1 0 0 0 0 1 0 0 0 0])
  (":h2" .
   [1 0 0])
  ("arg" .
   [1 0 0])
  ("eval-data" .
   [1 0 0 0 0 0 0 0 0])
  ("s/Num" .
   [6 0 1 1 4])
  ("on" .
   [2 0])
  (":f" .
   [1 0])
  ("Calendar" .
   [1 0 0 0 0 0 0 0])
  ("Schedule" .
   [0 0 0 0 0 0 0 1])
  ("target-user-profile" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("for-map" .
   [1 0 0 0 0 0 0])
  ("domain.activity.core" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("activity" .
   [1 0 0 0 0 0 0 0])
  ("explain" .
   [4 0 0 0 0 0 0])
  ("activity/pos-counts-only" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("fn->>" .
   [1 0 0 0 0])
  ("counts" .
   [4 0 0 0 0 0])
  (":geometric" .
   [0 0 0 0 0 0 0 0 0 1])
  ("interest-activity-counts" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("contains" .
   [3 0 0 0 0 0 0 1])
  (":view" .
   [1 0 0 0 0])
  ("1000" .
   [1 0 1 1])
  ("500" .
   [0 0 1])
  ("defschema" .
   [3 0 0 0 0 0 0 0 0])
  ("roman->arabic" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("roman-digit->arabic" .
   [0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0])
  ("roman" .
   [3 0 0 0 0])
  ("romain" .
   [1 0 0 0 0 0])
  ("smaller" .
   [2 0 0 0 0 0 0])
  ("arabic" .
   [3 0 0 0 0 0])
  ("larger" .
   [3 0 0 0 0 0])
  ("contains?" .
   [0 0 0 0 0 0 0 2 0])
  ("array-map" .
   [0 0 0 0 1 0 0 0 0])
  ("+roman-numerals+" .
   [0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0])
  ("thoughtworks.dont-panic" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("tokenize-word" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1])
  ("str" .
   [0 0 1])
  ("tokenize" .
   [3 0 0 0 0 0 0 1])
  ("tokenize-line" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1])
  ("clojure.string/split" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("binding" .
   [0 0 0 0 1 0 0])
  ("lines" .
   [3 0 0 0 0])
  ("input-lines" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":else" .
   [1 0 0 0 0])
  ("nil?" .
   [0 0 0 1])
  ("str/split" .
   [0 0 0 0 0 0 0 0 1])
  ("parse" .
   [1 0 0 0 0])
  ("IntegerSet" .
   [4 0 0 0 0 0 1 1 0 0])
  ("require" .
   [1 0 0 0 0 0 0])
  ("var" .
   [2 0 0])
  ("emptySet" .
   [2 0 0 1 2 2 0 0])
  ("size" .
   [3 0 1 0])
  ("testSet" .
   [1 0 0 0 0 0 0])
  ("describe" .
   [0 0 0 0 1 1 0 0])
  ("assert" .
   [4 0 0 0 0 1])
  ("equal" .
   [4 0 0 1 1])
  ("integers" .
   [1 0 0 0 0 0 0 0])
  ("addItems" .
   [0 0 0 0 0 0 1 0])
  ("addInteger" .
   [1 0 0 0 0 1 1 0 0 0])
  ("it" .
   [1 0])
  ("MapOfStuff" .
   [0 0 2 2 0 0 0 0 0 0])
  ("MapOfStuffSchema" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("StrList" .
   [0 0 0 0 0 1 0])
  ("s/validate" .
   [0 0 0 0 0 0 1 1 0 0])
  ("strs" .
   [1 0 0 0])
  ("s/optional-key" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("s/Keyword" .
   [0 0 0 0 0 1 0 0 0])
  (":host" .
   [0 0 0 0 1])
  ("IP:" .
   [1 0 0])
  ("10px" .
   [1 0 0 0])))
